; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.30319.01 

	TITLE	C:\Users\DimaRich\documents\visual studio 2010\Projects\Blocks\Blocks\Blocks.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB OLDNAMES

PUBLIC	??_C@_1BI@MLPDPDAN@?$AAB?$AAl?$AAo?$AAc?$AAk?$AAs?$AAC?$AAl?$AAa?$AAs?$AAs?$AA?$AA@ ; `string'
PUBLIC	?WindowProc@@YGJPAUHWND__@@IIJ@Z		; WindowProc
PUBLIC	??_C@_1O@KHPOFLIK@?$AAB?$AAl?$AAo?$AAc?$AAk?$AA?$CB?$AA?$AA@ ; `string'
PUBLIC	?Resize@ID2D1HwndRenderTarget@@QAEJABUD2D_SIZE_U@@@Z ; ID2D1HwndRenderTarget::Resize
PUBLIC	?CreateSolidColorBrush@ID2D1RenderTarget@@QAEJABUD3DCOLORVALUE@@PAPAUID2D1SolidColorBrush@@@Z ; ID2D1RenderTarget::CreateSolidColorBrush
PUBLIC	?CreateHwndRenderTarget@ID2D1Factory@@QAEJABUD2D1_RENDER_TARGET_PROPERTIES@@ABUD2D1_HWND_RENDER_TARGET_PROPERTIES@@PAPAUID2D1HwndRenderTarget@@@Z ; ID2D1Factory::CreateHwndRenderTarget
PUBLIC	??$Size@I@D2D1@@YA?AUD2D_SIZE_U@@II@Z		; D2D1::Size<unsigned int>
PUBLIC	?SizeU@D2D1@@YA?AUD2D_SIZE_U@@II@Z		; D2D1::SizeU
PUBLIC	?PixelFormat@D2D1@@YA?AUD2D1_PIXEL_FORMAT@@W4DXGI_FORMAT@@W4D2D1_ALPHA_MODE@@@Z ; D2D1::PixelFormat
PUBLIC	?RenderTargetProperties@D2D1@@YA?AUD2D1_RENDER_TARGET_PROPERTIES@@W4D2D1_RENDER_TARGET_TYPE@@ABUD2D1_PIXEL_FORMAT@@MMW4D2D1_RENDER_TARGET_USAGE@@W4D2D1_FEATURE_LEVEL@@@Z ; D2D1::RenderTargetProperties
PUBLIC	?HwndRenderTargetProperties@D2D1@@YA?AUD2D1_HWND_RENDER_TARGET_PROPERTIES@@PAUHWND__@@UD2D_SIZE_U@@W4D2D1_PRESENT_OPTIONS@@@Z ; D2D1::HwndRenderTargetProperties
PUBLIC	?D2D1CreateFactory@@YAJW4D2D1_FACTORY_TYPE@@ABU_GUID@@PAPAX@Z ; D2D1CreateFactory
PUBLIC	??$D2D1CreateFactory@UID2D1Factory@@@@YAJW4D2D1_FACTORY_TYPE@@PAPAUID2D1Factory@@@Z ; D2D1CreateFactory<ID2D1Factory>
PUBLIC	?DrawRectangle@ID2D1RenderTarget@@QAEXABUD2D_RECT_F@@PAUID2D1Brush@@MPAUID2D1StrokeStyle@@@Z ; ID2D1RenderTarget::DrawRectangle
PUBLIC	??$Rect@M@D2D1@@YA?AUD2D_RECT_F@@MMMM@Z		; D2D1::Rect<float>
PUBLIC	?RectF@D2D1@@YA?AUD2D_RECT_F@@MMMM@Z		; D2D1::RectF
PUBLIC	?Init@ColorF@D2D1@@AAEXIM@Z			; D2D1::ColorF::Init
PUBLIC	??0ColorF@D2D1@@QAE@W4Enum@01@M@Z		; D2D1::ColorF::ColorF
PUBLIC	?initProc@@3P6AXXZA				; initProc
PUBLIC	?pd2Factory@@3PAUID2D1Factory@@A		; pd2Factory
PUBLIC	?image@@3PAU_PixelStruct@@A			; image
PUBLIC	?hwndrtProp@@3UD2D1_HWND_RENDER_TARGET_PROPERTIES@@A ; hwndrtProp
PUBLIC	?drawProc@@3P6AXPAUSpace@@PAX@ZA		; drawProc
PUBLIC	?drawArg@@3PAXA					; drawArg
PUBLIC	?drawType@@3W4DrawType@@A			; drawType
PUBLIC	?pBlockHeaderTextFormat@@3PAUIDWriteTextFormat@@A ; pBlockHeaderTextFormat
PUBLIC	?pbmBufferInfo@@3PAUtagBITMAPINFO@@A		; pbmBufferInfo
PUBLIC	?pBlackBrush@@3PAUID2D1SolidColorBrush@@A	; pBlackBrush
PUBLIC	?pWhiteBrush@@3PAUID2D1SolidColorBrush@@A	; pWhiteBrush
PUBLIC	?screen@@3UtagPOINT@@A				; screen
PUBLIC	?pdwFactory@@3PAUIDWriteFactory@@A		; pdwFactory
PUBLIC	?clientRect@@3UtagRECT@@A			; clientRect
PUBLIC	?hbmBuffer@@3PAUHBITMAP__@@A			; hbmBuffer
PUBLIC	?rtProp@@3UD2D1_RENDER_TARGET_PROPERTIES@@A	; rtProp
PUBLIC	?hdcMainWindow@@3PAUHDC__@@A			; hdcMainWindow
PUBLIC	?hMainWindow@@3PAUHWND__@@A			; hMainWindow
PUBLIC	?ps@@3UtagPAINTSTRUCT@@A			; ps
PUBLIC	?hdcBuffer@@3PAUHDC__@@A			; hdcBuffer
PUBLIC	?pTarget@@3PAUID2D1HwndRenderTarget@@A		; pTarget
PUBLIC	?blockHeaderHeight@@3HA				; blockHeaderHeight
PUBLIC	?b1@@3UBlock@@A					; b1
PUBLIC	?space@@3USpace@@A				; space
PUBLIC	?windowClass@@3UtagWNDCLASSEXW@@A		; windowClass
PUBLIC	??_C@_1CK@MLMKONGA@?$AAB?$AAl?$AAo?$AAc?$AAk?$AAs?$AA?$CB?$AA?5?$AA?$CI?$AAl?$AAo?$AAa?$AAd?$AAi?$AAn?$AAg?$AA?4?$AA?4?$AA?4?$AA?$CJ?$AA?$AA@ ; `string'
PUBLIC	??_C@_1BA@GEBNDOOE@?$AAB?$AAl?$AAo?$AAc?$AAk?$AAs?$AA?$CB?$AA?$AA@ ; `string'
PUBLIC	??_C@_1EG@KCDIDEBK@?$AAC?$AAo?$AAu?$AAl?$AAd?$AA?5?$AAn?$AAo?$AAt?$AA?5?$AAc?$AAr?$AAe?$AAa?$AAt?$AAe?$AA?5?$AAD?$AAi?$AAr?$AAe?$AAc?$AAt?$AA2?$AAD?$AA?5?$AAf?$AAa?$AAc?$AAt?$AAo?$AAr@ ; `string'
PUBLIC	??_C@_1EM@CHCFPCCO@?$AAC?$AAo?$AAu?$AAl?$AAd?$AA?5?$AAn?$AAo?$AAt?$AA?5?$AAc?$AAr?$AAe?$AAa?$AAt?$AAe?$AA?5?$AAD?$AAi?$AAr?$AAe?$AAc?$AAt?$AAW?$AAr?$AAi?$AAt?$AAe?$AA?5?$AAf?$AAa?$AAc@ ; `string'
PUBLIC	??_C@_1M@LLODPCMM@?$AAe?$AAn?$AA?9?$AAu?$AAs?$AA?$AA@ ; `string'
PUBLIC	??_C@_1M@KAKMLIHO@?$AAA?$AAr?$AAi?$AAa?$AAl?$AA?$AA@ ; `string'
PUBLIC	__GUID_b859ee5a_d838_4b5b_a2e8_1adc7d93db48
PUBLIC	__GUID_06152247_6f50_465a_9245_118bfd3b6007
EXTRN	@__security_check_cookie@4:PROC
EXTRN	__imp__GetMessageW@16:PROC
EXTRN	__imp__TranslateMessage@4:PROC
EXTRN	__imp__DispatchMessageW@4:PROC
EXTRN	__imp__RegisterClassExW@4:PROC
EXTRN	__imp__CreateWindowExW@48:PROC
EXTRN	__imp__SetWindowTextW@8:PROC
EXTRN	__imp__LoadCursorW@8:PROC
EXTRN	__imp__DefWindowProcW@16:PROC
EXTRN	__imp__PostQuitMessage@4:PROC
EXTRN	__imp__ShowWindow@8:PROC
EXTRN	__imp__UpdateWindow@4:PROC
EXTRN	__imp__InvalidateRect@12:PROC
EXTRN	__imp__GetClientRect@8:PROC
EXTRN	__imp__CreateCompatibleDC@4:PROC
EXTRN	__imp__GetStockObject@4:PROC
EXTRN	__imp__GetDC@4:PROC
EXTRN	__imp__ReleaseDC@8:PROC
EXTRN	__imp__CreateCompatibleBitmap@12:PROC
EXTRN	__imp__CreateDIBSection@24:PROC
EXTRN	__imp__GetSystemMetrics@4:PROC
EXTRN	__imp__calloc:PROC
EXTRN	__imp__malloc:PROC
EXTRN	__imp__ExitProcess@4:PROC
EXTRN	__imp__MessageBoxW@16:PROC
EXTRN	__imp__DWriteCreateFactory@12:PROC
EXTRN	__imp__D2D1CreateFactory@16:PROC
EXTRN	__imp__BitBlt@36:PROC
EXTRN	__imp__FillRect@12:PROC
EXTRN	__imp__StretchDIBits@52:PROC
EXTRN	__imp__BeginPaint@8:PROC
EXTRN	__imp__EndPaint@8:PROC
EXTRN	__imp__CreateSolidBrush@4:PROC
EXTRN	__imp__Rectangle@20:PROC
EXTRN	__imp__RestoreDC@8:PROC
EXTRN	__imp__SaveDC@4:PROC
EXTRN	__imp__SelectObject@8:PROC
EXTRN	__imp__GetSysColorBrush@4:PROC
?initProc@@3P6AXXZA DD 01H DUP (?)			; initProc
?pd2Factory@@3PAUID2D1Factory@@A DD 01H DUP (?)		; pd2Factory
?image@@3PAU_PixelStruct@@A DD 01H DUP (?)		; image
?hwndrtProp@@3UD2D1_HWND_RENDER_TARGET_PROPERTIES@@A DB 010H DUP (?) ; hwndrtProp
?drawProc@@3P6AXPAUSpace@@PAX@ZA DD 01H DUP (?)		; drawProc
?drawArg@@3PAXA DD 01H DUP (?)				; drawArg
?drawType@@3W4DrawType@@A DD 01H DUP (?)		; drawType
?pBlockHeaderTextFormat@@3PAUIDWriteTextFormat@@A DD 01H DUP (?) ; pBlockHeaderTextFormat
?pbmBufferInfo@@3PAUtagBITMAPINFO@@A DD 01H DUP (?)	; pbmBufferInfo
?pBlackBrush@@3PAUID2D1SolidColorBrush@@A DD 01H DUP (?) ; pBlackBrush
?pWhiteBrush@@3PAUID2D1SolidColorBrush@@A DD 01H DUP (?) ; pWhiteBrush
?screen@@3UtagPOINT@@A DQ 01H DUP (?)			; screen
?pdwFactory@@3PAUIDWriteFactory@@A DD 01H DUP (?)	; pdwFactory
?clientRect@@3UtagRECT@@A DB 010H DUP (?)		; clientRect
?hbmBuffer@@3PAUHBITMAP__@@A DD 01H DUP (?)		; hbmBuffer
?rtProp@@3UD2D1_RENDER_TARGET_PROPERTIES@@A DB 01cH DUP (?) ; rtProp
?hdcMainWindow@@3PAUHDC__@@A DD 01H DUP (?)		; hdcMainWindow
?hMainWindow@@3PAUHWND__@@A DD 01H DUP (?)		; hMainWindow
?ps@@3UtagPAINTSTRUCT@@A DB 040H DUP (?)		; ps
?hdcBuffer@@3PAUHDC__@@A DD 01H DUP (?)			; hdcBuffer
?pTarget@@3PAUID2D1HwndRenderTarget@@A DD 01H DUP (?)	; pTarget
;	COMDAT __GUID_06152247_6f50_465a_9245_118bfd3b6007
CONST	SEGMENT
__GUID_06152247_6f50_465a_9245_118bfd3b6007 DD 06152247H
	DW	06f50H
	DW	0465aH
	DB	092H
	DB	045H
	DB	011H
	DB	08bH
	DB	0fdH
	DB	03bH
	DB	060H
	DB	07H
CONST	ENDS
;	COMDAT __GUID_b859ee5a_d838_4b5b_a2e8_1adc7d93db48
CONST	SEGMENT
__GUID_b859ee5a_d838_4b5b_a2e8_1adc7d93db48 DD 0b859ee5aH
	DW	0d838H
	DW	04b5bH
	DB	0a2H
	DB	0e8H
	DB	01aH
	DB	0dcH
	DB	07dH
	DB	093H
	DB	0dbH
	DB	048H
CONST	ENDS
;	COMDAT ??_C@_1M@KAKMLIHO@?$AAA?$AAr?$AAi?$AAa?$AAl?$AA?$AA@
CONST	SEGMENT
??_C@_1M@KAKMLIHO@?$AAA?$AAr?$AAi?$AAa?$AAl?$AA?$AA@ DB 'A', 00H, 'r', 00H
	DB	'i', 00H, 'a', 00H, 'l', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_1M@LLODPCMM@?$AAe?$AAn?$AA?9?$AAu?$AAs?$AA?$AA@
CONST	SEGMENT
??_C@_1M@LLODPCMM@?$AAe?$AAn?$AA?9?$AAu?$AAs?$AA?$AA@ DB 'e', 00H, 'n', 00H
	DB	'-', 00H, 'u', 00H, 's', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_1EM@CHCFPCCO@?$AAC?$AAo?$AAu?$AAl?$AAd?$AA?5?$AAn?$AAo?$AAt?$AA?5?$AAc?$AAr?$AAe?$AAa?$AAt?$AAe?$AA?5?$AAD?$AAi?$AAr?$AAe?$AAc?$AAt?$AAW?$AAr?$AAi?$AAt?$AAe?$AA?5?$AAf?$AAa?$AAc@
CONST	SEGMENT
??_C@_1EM@CHCFPCCO@?$AAC?$AAo?$AAu?$AAl?$AAd?$AA?5?$AAn?$AAo?$AAt?$AA?5?$AAc?$AAr?$AAe?$AAa?$AAt?$AAe?$AA?5?$AAD?$AAi?$AAr?$AAe?$AAc?$AAt?$AAW?$AAr?$AAi?$AAt?$AAe?$AA?5?$AAf?$AAa?$AAc@ DB 'C'
	DB	00H, 'o', 00H, 'u', 00H, 'l', 00H, 'd', 00H, ' ', 00H, 'n', 00H
	DB	'o', 00H, 't', 00H, ' ', 00H, 'c', 00H, 'r', 00H, 'e', 00H, 'a'
	DB	00H, 't', 00H, 'e', 00H, ' ', 00H, 'D', 00H, 'i', 00H, 'r', 00H
	DB	'e', 00H, 'c', 00H, 't', 00H, 'W', 00H, 'r', 00H, 'i', 00H, 't'
	DB	00H, 'e', 00H, ' ', 00H, 'f', 00H, 'a', 00H, 'c', 00H, 't', 00H
	DB	'o', 00H, 'r', 00H, 'y', 00H, '!', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1EG@KCDIDEBK@?$AAC?$AAo?$AAu?$AAl?$AAd?$AA?5?$AAn?$AAo?$AAt?$AA?5?$AAc?$AAr?$AAe?$AAa?$AAt?$AAe?$AA?5?$AAD?$AAi?$AAr?$AAe?$AAc?$AAt?$AA2?$AAD?$AA?5?$AAf?$AAa?$AAc?$AAt?$AAo?$AAr@
CONST	SEGMENT
??_C@_1EG@KCDIDEBK@?$AAC?$AAo?$AAu?$AAl?$AAd?$AA?5?$AAn?$AAo?$AAt?$AA?5?$AAc?$AAr?$AAe?$AAa?$AAt?$AAe?$AA?5?$AAD?$AAi?$AAr?$AAe?$AAc?$AAt?$AA2?$AAD?$AA?5?$AAf?$AAa?$AAc?$AAt?$AAo?$AAr@ DB 'C'
	DB	00H, 'o', 00H, 'u', 00H, 'l', 00H, 'd', 00H, ' ', 00H, 'n', 00H
	DB	'o', 00H, 't', 00H, ' ', 00H, 'c', 00H, 'r', 00H, 'e', 00H, 'a'
	DB	00H, 't', 00H, 'e', 00H, ' ', 00H, 'D', 00H, 'i', 00H, 'r', 00H
	DB	'e', 00H, 'c', 00H, 't', 00H, '2', 00H, 'D', 00H, ' ', 00H, 'f'
	DB	00H, 'a', 00H, 'c', 00H, 't', 00H, 'o', 00H, 'r', 00H, 'y', 00H
	DB	'!', 00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_1BA@GEBNDOOE@?$AAB?$AAl?$AAo?$AAc?$AAk?$AAs?$AA?$CB?$AA?$AA@
CONST	SEGMENT
??_C@_1BA@GEBNDOOE@?$AAB?$AAl?$AAo?$AAc?$AAk?$AAs?$AA?$CB?$AA?$AA@ DB 'B', 00H
	DB	'l', 00H, 'o', 00H, 'c', 00H, 'k', 00H, 's', 00H, '!', 00H, 00H
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_1CK@MLMKONGA@?$AAB?$AAl?$AAo?$AAc?$AAk?$AAs?$AA?$CB?$AA?5?$AA?$CI?$AAl?$AAo?$AAa?$AAd?$AAi?$AAn?$AAg?$AA?4?$AA?4?$AA?4?$AA?$CJ?$AA?$AA@
CONST	SEGMENT
??_C@_1CK@MLMKONGA@?$AAB?$AAl?$AAo?$AAc?$AAk?$AAs?$AA?$CB?$AA?5?$AA?$CI?$AAl?$AAo?$AAa?$AAd?$AAi?$AAn?$AAg?$AA?4?$AA?4?$AA?4?$AA?$CJ?$AA?$AA@ DB 'B'
	DB	00H, 'l', 00H, 'o', 00H, 'c', 00H, 'k', 00H, 's', 00H, '!', 00H
	DB	' ', 00H, '(', 00H, 'l', 00H, 'o', 00H, 'a', 00H, 'd', 00H, 'i'
	DB	00H, 'n', 00H, 'g', 00H, '.', 00H, '.', 00H, '.', 00H, ')', 00H
	DB	00H, 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_1BI@MLPDPDAN@?$AAB?$AAl?$AAo?$AAc?$AAk?$AAs?$AAC?$AAl?$AAa?$AAs?$AAs?$AA?$AA@
CONST	SEGMENT
??_C@_1BI@MLPDPDAN@?$AAB?$AAl?$AAo?$AAc?$AAk?$AAs?$AAC?$AAl?$AAa?$AAs?$AAs?$AA?$AA@ DB 'B'
	DB	00H, 'l', 00H, 'o', 00H, 'c', 00H, 'k', 00H, 's', 00H, 'C', 00H
	DB	'l', 00H, 'a', 00H, 's', 00H, 's', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1O@KHPOFLIK@?$AAB?$AAl?$AAo?$AAc?$AAk?$AA?$CB?$AA?$AA@
CONST	SEGMENT
??_C@_1O@KHPOFLIK@?$AAB?$AAl?$AAo?$AAc?$AAk?$AA?$CB?$AA?$AA@ DB 'B', 00H, 'l'
	DB	00H, 'o', 00H, 'c', 00H, 'k', 00H, '!', 00H, 00H, 00H ; `string'
?blockHeaderHeight@@3HA DD 014H				; blockHeaderHeight
?b1@@3UBlock@@A DD 0aH					; b1
	DD	0b4H
	DD	078H
	DD	078H
	DD	FLAT:??_C@_1O@KHPOFLIK@?$AAB?$AAl?$AAo?$AAc?$AAk?$AA?$CB?$AA?$AA@
	ORG $+4
?space@@3USpace@@A DD 02H				; space
	DD	FLAT:?b1@@3UBlock@@A
?windowClass@@3UtagWNDCLASSEXW@@A DD 030H		; windowClass
	DD	00H
	DD	FLAT:?WindowProc@@YGJPAUHWND__@@IIJ@Z
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	FLAT:??_C@_1BI@MLPDPDAN@?$AAB?$AAl?$AAo?$AAc?$AAk?$AAs?$AAC?$AAl?$AAa?$AAs?$AAs?$AA?$AA@
	DD	00H
EXTRN	__fltused:DWORD
; Function compile flags: /Ogsp
;	COMDAT ??$Rect@M@D2D1@@YA?AUD2D_RECT_F@@MMMM@Z
_TEXT	SEGMENT
_top$ = 8						; size = 4
_right$ = 12						; size = 4
_bottom$ = 16						; size = 4
??$Rect@M@D2D1@@YA?AUD2D_RECT_F@@MMMM@Z PROC		; D2D1::Rect<float>, COMDAT
; $T77272 = eax
; _left$ = xmm0s
; File c:\program files (x86)\microsoft sdks\windows\v7.0a\include\d2d1helper.h
; Line 141
	push	ebp
	mov	ebp, esp
; Line 142
	movss	DWORD PTR [eax], xmm0
	movss	xmm0, DWORD PTR _top$[ebp]
	movss	DWORD PTR [eax+4], xmm0
	movss	xmm0, DWORD PTR _right$[ebp]
	movss	DWORD PTR [eax+8], xmm0
	movss	xmm0, DWORD PTR _bottom$[ebp]
	movss	DWORD PTR [eax+12], xmm0
; Line 145
	pop	ebp
	ret	0
??$Rect@M@D2D1@@YA?AUD2D_RECT_F@@MMMM@Z ENDP		; D2D1::Rect<float>
; Function compile flags: /Ogsp
_TEXT	ENDS
;	COMDAT ??$Size@I@D2D1@@YA?AUD2D_SIZE_U@@II@Z
_TEXT	SEGMENT
??$Size@I@D2D1@@YA?AUD2D_SIZE_U@@II@Z PROC		; D2D1::Size<unsigned int>, COMDAT
; _width$ = eax
; _height$ = edx
; Line 110
	ret	0
??$Size@I@D2D1@@YA?AUD2D_SIZE_U@@II@Z ENDP		; D2D1::Size<unsigned int>
_TEXT	ENDS
PUBLIC	?DIBDrawBlock@@YAXPAUBlock@@@Z			; DIBDrawBlock
; Function compile flags: /Ogsp
;	COMDAT ?DIBDrawBlock@@YAXPAUBlock@@@Z
_TEXT	SEGMENT
?DIBDrawBlock@@YAXPAUBlock@@@Z PROC			; DIBDrawBlock, COMDAT
; File c:\users\dimarich\documents\visual studio 2010\projects\blocks\blocks\blocks.cpp
; Line 241
	ret	0
?DIBDrawBlock@@YAXPAUBlock@@@Z ENDP			; DIBDrawBlock
_TEXT	ENDS
PUBLIC	?GDIDrawBlock@@YAXPAUBlock@@@Z			; GDIDrawBlock
; Function compile flags: /Ogsp
;	COMDAT ?GDIDrawBlock@@YAXPAUBlock@@@Z
_TEXT	SEGMENT
?GDIDrawBlock@@YAXPAUBlock@@@Z PROC			; GDIDrawBlock, COMDAT
; _block$ = esi
; Line 223
	push	ebx
	push	edi
; Line 225
	push	DWORD PTR ?hdcBuffer@@3PAUHDC__@@A	; hdcBuffer
	call	DWORD PTR __imp__SaveDC@4
; Line 226
	mov	edi, DWORD PTR ?clientRect@@3UtagRECT@@A+12
; Line 227
	mov	eax, DWORD PTR [esi+4]
	mov	ecx, DWORD PTR [esi]
	mov	ebx, DWORD PTR __imp__Rectangle@20
	mov	edx, edi
	sub	edx, eax
	sub	edx, DWORD PTR [esi+12]
	push	edx
	mov	edx, DWORD PTR [esi+8]
	add	edx, ecx
	push	edx
	mov	edx, edi
	sub	edx, eax
	push	edx
	push	ecx
	push	DWORD PTR ?hdcBuffer@@3PAUHDC__@@A	; hdcBuffer
	call	ebx
; Line 228
	push	30					; 0000001eH
	call	DWORD PTR __imp__CreateSolidBrush@4
; Line 229
	push	3
	call	DWORD PTR __imp__GetSysColorBrush@4
; Line 230
	push	eax
	push	DWORD PTR ?hdcBuffer@@3PAUHDC__@@A	; hdcBuffer
	call	DWORD PTR __imp__SelectObject@8
; Line 231
	sub	edi, DWORD PTR [esi+12]
	mov	eax, DWORD PTR [esi]
	sub	edi, DWORD PTR [esi+4]
	lea	ecx, DWORD PTR [edi-20]
	push	ecx
	mov	ecx, DWORD PTR [esi+8]
	add	ecx, eax
	push	ecx
	push	edi
	push	eax
	push	DWORD PTR ?hdcBuffer@@3PAUHDC__@@A	; hdcBuffer
	call	ebx
; Line 232
	push	-1
	push	DWORD PTR ?hdcBuffer@@3PAUHDC__@@A	; hdcBuffer
	call	DWORD PTR __imp__RestoreDC@8
	pop	edi
	pop	ebx
; Line 234
	ret	0
?GDIDrawBlock@@YAXPAUBlock@@@Z ENDP			; GDIDrawBlock
_TEXT	ENDS
PUBLIC	?DIBDraw@@YAXPAUSpace@@PAX@Z			; DIBDraw
; Function compile flags: /Ogsp
;	COMDAT ?DIBDraw@@YAXPAUSpace@@PAX@Z
_TEXT	SEGMENT
_workingSpace$ = 8					; size = 4
_arg$ = 12						; size = 4
?DIBDraw@@YAXPAUSpace@@PAX@Z PROC			; DIBDraw, COMDAT
; Line 193
	push	esi
; Line 196
	mov	esi, OFFSET ?ps@@3UtagPAINTSTRUCT@@A	; ps
	push	esi
	push	DWORD PTR ?hMainWindow@@3PAUHWND__@@A	; hMainWindow
	call	DWORD PTR __imp__BeginPaint@8
; Line 200
	mov	eax, DWORD PTR ?clientRect@@3UtagRECT@@A+12
	mov	ecx, DWORD PTR ?clientRect@@3UtagRECT@@A+8
	push	13369376				; 00cc0020H
	xor	edx, edx
	push	edx
	push	DWORD PTR ?pbmBufferInfo@@3PAUtagBITMAPINFO@@A ; pbmBufferInfo
	push	DWORD PTR ?image@@3PAU_PixelStruct@@A	; image
	push	eax
	push	ecx
	push	edx
	push	edx
	push	eax
	push	ecx
	push	edx
	push	edx
	push	DWORD PTR ?ps@@3UtagPAINTSTRUCT@@A
	call	DWORD PTR __imp__StretchDIBits@52
; Line 201
	push	esi
	push	DWORD PTR ?hMainWindow@@3PAUHWND__@@A	; hMainWindow
	call	DWORD PTR __imp__EndPaint@8
	pop	esi
; Line 203
	ret	0
?DIBDraw@@YAXPAUSpace@@PAX@Z ENDP			; DIBDraw
_TEXT	ENDS
PUBLIC	?GDIDraw@@YAXPAUSpace@@PAX@Z			; GDIDraw
; Function compile flags: /Ogsp
;	COMDAT ?GDIDraw@@YAXPAUSpace@@PAX@Z
_TEXT	SEGMENT
_i$76934 = -4						; size = 4
tv160 = 8						; size = 4
_workingSpace$ = 8					; size = 4
_arg$ = 12						; size = 4
?GDIDraw@@YAXPAUSpace@@PAX@Z PROC			; GDIDraw, COMDAT
; Line 179
	push	ebp
	mov	ebp, esp
	push	ecx
	push	ebx
	push	esi
	push	edi
; Line 182
	mov	ebx, OFFSET ?ps@@3UtagPAINTSTRUCT@@A	; ps
	push	ebx
	push	DWORD PTR ?hMainWindow@@3PAUHWND__@@A	; hMainWindow
	call	DWORD PTR __imp__BeginPaint@8
; Line 183
	xor	esi, esi
	push	esi
	push	OFFSET ?clientRect@@3UtagRECT@@A	; clientRect
	push	DWORD PTR ?hdcBuffer@@3PAUHDC__@@A	; hdcBuffer
	call	DWORD PTR __imp__FillRect@12
; Line 184
	mov	edi, DWORD PTR _workingSpace$[ebp]
	mov	DWORD PTR _i$76934[ebp], esi
	cmp	DWORD PTR [edi], esi
	jle	SHORT $LN1@GDIDraw
; Line 182
	mov	DWORD PTR tv160[ebp], esi
$LL8@GDIDraw:
; Line 185
	mov	esi, DWORD PTR [edi+4]
	add	esi, DWORD PTR tv160[ebp]
	call	?GDIDrawBlock@@YAXPAUBlock@@@Z		; GDIDrawBlock
	inc	DWORD PTR _i$76934[ebp]
	mov	eax, DWORD PTR _i$76934[ebp]
	add	DWORD PTR tv160[ebp], 24		; 00000018H
	cmp	eax, DWORD PTR [edi]
	jl	SHORT $LL8@GDIDraw
; Line 184
	xor	esi, esi
$LN1@GDIDraw:
; Line 187
	push	13369376				; 00cc0020H
	push	esi
	push	esi
	push	DWORD PTR ?hdcBuffer@@3PAUHDC__@@A	; hdcBuffer
	push	DWORD PTR ?clientRect@@3UtagRECT@@A+12
	push	DWORD PTR ?clientRect@@3UtagRECT@@A+8
	push	esi
	push	esi
	push	DWORD PTR ?ps@@3UtagPAINTSTRUCT@@A
	call	DWORD PTR __imp__BitBlt@36
; Line 188
	push	ebx
	push	DWORD PTR ?hMainWindow@@3PAUHWND__@@A	; hMainWindow
	call	DWORD PTR __imp__EndPaint@8
	pop	edi
	pop	esi
	pop	ebx
; Line 190
	leave
	ret	0
?GDIDraw@@YAXPAUSpace@@PAX@Z ENDP			; GDIDraw
_TEXT	ENDS
PUBLIC	?DIBInit@@YAXXZ					; DIBInit
; Function compile flags: /Ogsp
;	COMDAT ?DIBInit@@YAXXZ
_TEXT	SEGMENT
?DIBInit@@YAXXZ PROC					; DIBInit, COMDAT
; Line 138
	push	ebx
	push	esi
; Line 140
	mov	esi, DWORD PTR __imp__GetSystemMetrics@4
	push	edi
	xor	ebx, ebx
	push	ebx
	call	esi
; Line 141
	push	1
	mov	DWORD PTR ?screen@@3UtagPOINT@@A, eax
	call	esi
	mov	edi, eax
; Line 142
	push	44					; 0000002cH
	push	1
	mov	DWORD PTR ?screen@@3UtagPOINT@@A+4, edi
	call	DWORD PTR __imp__calloc
	mov	esi, eax
; Line 143
	xor	eax, eax
	inc	eax
	mov	WORD PTR [esi+12], ax
; Line 144
	push	24					; 00000018H
	pop	eax
	mov	WORD PTR [esi+14], ax
; Line 146
	mov	eax, DWORD PTR ?screen@@3UtagPOINT@@A
; Line 147
	mov	DWORD PTR [esi+8], edi
; Line 148
	imul	edi, eax
	imul	edi, 3
	push	edi
	mov	DWORD PTR ?pbmBufferInfo@@3PAUtagBITMAPINFO@@A, esi ; pbmBufferInfo
	mov	DWORD PTR [esi+16], ebx
	mov	DWORD PTR [esi+4], eax
	call	DWORD PTR __imp__malloc
	add	esp, 12					; 0000000cH
; Line 149
	push	ebx
	push	ebx
	push	eax
	push	ebx
	push	esi
	push	DWORD PTR ?hdcBuffer@@3PAUHDC__@@A	; hdcBuffer
	mov	DWORD PTR ?image@@3PAU_PixelStruct@@A, eax ; image
	call	DWORD PTR __imp__CreateDIBSection@24
; Line 150
	push	DWORD PTR ?screen@@3UtagPOINT@@A+4
	mov	DWORD PTR ?hbmBuffer@@3PAUHBITMAP__@@A, eax ; hbmBuffer
	push	DWORD PTR ?screen@@3UtagPOINT@@A
	push	DWORD PTR ?hdcBuffer@@3PAUHDC__@@A	; hdcBuffer
	call	DWORD PTR __imp__CreateCompatibleBitmap@12
; Line 151
	push	eax
	push	DWORD PTR ?hdcBuffer@@3PAUHDC__@@A	; hdcBuffer
	mov	DWORD PTR ?hbmBuffer@@3PAUHBITMAP__@@A, eax ; hbmBuffer
	call	DWORD PTR __imp__SelectObject@8
	pop	edi
	pop	esi
	pop	ebx
; Line 153
	ret	0
?DIBInit@@YAXXZ ENDP					; DIBInit
_TEXT	ENDS
PUBLIC	?GDIInit@@YAXXZ					; GDIInit
; Function compile flags: /Ogsp
;	COMDAT ?GDIInit@@YAXXZ
_TEXT	SEGMENT
?GDIInit@@YAXXZ PROC					; GDIInit, COMDAT
; Line 126
	push	esi
; Line 128
	mov	esi, DWORD PTR __imp__GetDC@4
	push	edi
	push	DWORD PTR ?hMainWindow@@3PAUHWND__@@A	; hMainWindow
	call	esi
; Line 129
	xor	edi, edi
	push	edi
	mov	DWORD PTR ?hdcMainWindow@@3PAUHDC__@@A, eax ; hdcMainWindow
	call	esi
	mov	esi, eax
; Line 130
	push	esi
	call	DWORD PTR __imp__CreateCompatibleDC@4
; Line 131
	push	esi
	push	edi
	mov	DWORD PTR ?hdcBuffer@@3PAUHDC__@@A, eax	; hdcBuffer
	call	DWORD PTR __imp__ReleaseDC@8
; Line 132
	mov	esi, DWORD PTR __imp__GetStockObject@4
	push	edi
	call	esi
	mov	edi, DWORD PTR __imp__SelectObject@8
	push	eax
	push	DWORD PTR ?hdcBuffer@@3PAUHDC__@@A	; hdcBuffer
	call	edi
; Line 133
	push	7
	call	esi
	push	eax
	push	DWORD PTR ?hdcBuffer@@3PAUHDC__@@A	; hdcBuffer
	call	edi
	pop	edi
	pop	esi
; Line 135
	ret	0
?GDIInit@@YAXXZ ENDP					; GDIInit
; Function compile flags: /Ogsp
_TEXT	ENDS
;	COMDAT ?D2D1CreateFactory@@YAJW4D2D1_FACTORY_TYPE@@ABU_GUID@@PAPAX@Z
_TEXT	SEGMENT
?D2D1CreateFactory@@YAJW4D2D1_FACTORY_TYPE@@ABU_GUID@@PAPAX@Z PROC ; D2D1CreateFactory, COMDAT
; File c:\program files (x86)\microsoft sdks\windows\v7.0a\include\d2d1.h
; Line 6961
	push	OFFSET ?pd2Factory@@3PAUID2D1Factory@@A	; pd2Factory
	push	0
	push	OFFSET __GUID_06152247_6f50_465a_9245_118bfd3b6007
	push	0
	call	DWORD PTR __imp__D2D1CreateFactory@16
; Line 6962
	ret	0
?D2D1CreateFactory@@YAJW4D2D1_FACTORY_TYPE@@ABU_GUID@@PAPAX@Z ENDP ; D2D1CreateFactory
_TEXT	ENDS
PUBLIC	__real@406fe00000000000
;	COMDAT __real@406fe00000000000
; File c:\program files (x86)\microsoft sdks\windows\v7.0a\include\d2d1helper.h
CONST	SEGMENT
__real@406fe00000000000 DQ 0406fe00000000000r	; 255
; Function compile flags: /Ogsp
CONST	ENDS
;	COMDAT ?Init@ColorF@D2D1@@AAEXIM@Z
_TEXT	SEGMENT
tv176 = -4						; size = 4
tv173 = -4						; size = 4
tv170 = 8						; size = 4
_rgb$ = 8						; size = 4
_a$ = 12						; size = 4
?Init@ColorF@D2D1@@AAEXIM@Z PROC			; D2D1::ColorF::Init, COMDAT
; _this$ = eax
; Line 679
	push	ebp
	mov	ebp, esp
	push	ecx
; Line 680
	mov	edx, DWORD PTR _rgb$[ebp]
	shr	edx, 16					; 00000010H
	mov	ecx, 255				; 000000ffH
	and	edx, ecx
	mov	DWORD PTR tv176[ebp], edx
	fild	DWORD PTR tv176[ebp]
; Line 681
	mov	edx, DWORD PTR _rgb$[ebp]
	fld	QWORD PTR __real@406fe00000000000
	shr	edx, 8
	and	edx, ecx
	fdiv	ST(1), ST(0)
	mov	DWORD PTR tv173[ebp], edx
; Line 682
	movzx	ecx, BYTE PTR _rgb$[ebp]
	mov	DWORD PTR tv170[ebp], ecx
; Line 683
	movups	xmm0, DWORD PTR _a$[ebp]
	movups	DWORD PTR [eax+12], xmm0
	fxch	ST(1)
	fstp	DWORD PTR [eax]
	fild	DWORD PTR tv173[ebp]
	fdiv	ST(0), ST(1)
	fstp	DWORD PTR [eax+4]
	fidivr	DWORD PTR tv170[ebp]
	fstp	DWORD PTR [eax+8]
; Line 684
	leave
	ret	8
?Init@ColorF@D2D1@@AAEXIM@Z ENDP			; D2D1::ColorF::Init
; Function compile flags: /Ogsp
_TEXT	ENDS
;	COMDAT ??0ColorF@D2D1@@QAE@W4Enum@01@M@Z
_TEXT	SEGMENT
tv176 = -4						; size = 4
tv173 = -4						; size = 4
tv170 = 8						; size = 4
_knownColor$ = 8					; size = 4
_a$ = 12						; size = 4
??0ColorF@D2D1@@QAE@W4Enum@01@M@Z PROC			; D2D1::ColorF::ColorF, COMDAT
; _this$ = eax
; Line 649
	push	ebp
	mov	ebp, esp
	push	ecx
; Line 654
	mov	edx, DWORD PTR _knownColor$[ebp]
	shr	edx, 16					; 00000010H
	mov	ecx, 255				; 000000ffH
	and	edx, ecx
	mov	DWORD PTR tv176[ebp], edx
	fild	DWORD PTR tv176[ebp]
	mov	edx, DWORD PTR _knownColor$[ebp]
	fld	QWORD PTR __real@406fe00000000000
	shr	edx, 8
	and	edx, ecx
	fdiv	ST(1), ST(0)
	mov	DWORD PTR tv173[ebp], edx
	movzx	ecx, BYTE PTR _knownColor$[ebp]
	mov	DWORD PTR tv170[ebp], ecx
	movups	xmm0, DWORD PTR _a$[ebp]
	movups	DWORD PTR [eax+12], xmm0
	fxch	ST(1)
	fstp	DWORD PTR [eax]
	fild	DWORD PTR tv173[ebp]
	fdiv	ST(0), ST(1)
	fstp	DWORD PTR [eax+4]
	fidivr	DWORD PTR tv170[ebp]
	fstp	DWORD PTR [eax+8]
; Line 655
	leave
	ret	8
??0ColorF@D2D1@@QAE@W4Enum@01@M@Z ENDP			; D2D1::ColorF::ColorF
; Function compile flags: /Ogsp
_TEXT	ENDS
;	COMDAT ?HwndRenderTargetProperties@D2D1@@YA?AUD2D1_HWND_RENDER_TARGET_PROPERTIES@@PAUHWND__@@UD2D_SIZE_U@@W4D2D1_PRESENT_OPTIONS@@@Z
_TEXT	SEGMENT
_pixelSize$ = 8						; size = 8
?HwndRenderTargetProperties@D2D1@@YA?AUD2D1_HWND_RENDER_TARGET_PROPERTIES@@PAUHWND__@@UD2D_SIZE_U@@W4D2D1_PRESENT_OPTIONS@@@Z PROC ; D2D1::HwndRenderTargetProperties, COMDAT
; $T77318 = eax
; Line 428
	push	ebp
	mov	ebp, esp
; Line 431
	mov	ecx, DWORD PTR ?hMainWindow@@3PAUHWND__@@A ; hMainWindow
; Line 433
	and	DWORD PTR [eax+12], 0
	mov	DWORD PTR [eax], ecx
	mov	ecx, DWORD PTR _pixelSize$[ebp]
	mov	DWORD PTR [eax+4], ecx
	mov	ecx, DWORD PTR _pixelSize$[ebp+4]
	mov	DWORD PTR [eax+8], ecx
; Line 436
	pop	ebp
	ret	0
?HwndRenderTargetProperties@D2D1@@YA?AUD2D1_HWND_RENDER_TARGET_PROPERTIES@@PAUHWND__@@UD2D_SIZE_U@@W4D2D1_PRESENT_OPTIONS@@@Z ENDP ; D2D1::HwndRenderTargetProperties
; Function compile flags: /Ogsp
_TEXT	ENDS
;	COMDAT ?RenderTargetProperties@D2D1@@YA?AUD2D1_RENDER_TARGET_PROPERTIES@@W4D2D1_RENDER_TARGET_TYPE@@ABUD2D1_PIXEL_FORMAT@@MMW4D2D1_RENDER_TARGET_USAGE@@W4D2D1_FEATURE_LEVEL@@@Z
_TEXT	SEGMENT
_dpiY$ = 8						; size = 4
?RenderTargetProperties@D2D1@@YA?AUD2D1_RENDER_TARGET_PROPERTIES@@W4D2D1_RENDER_TARGET_TYPE@@ABUD2D1_PIXEL_FORMAT@@MMW4D2D1_RENDER_TARGET_USAGE@@W4D2D1_FEATURE_LEVEL@@@Z PROC ; D2D1::RenderTargetProperties, COMDAT
; $T77322 = eax
; _pixelFormat$ = ecx
; _dpiX$ = xmm0s
; Line 408
	push	ebp
	mov	ebp, esp
	push	esi
; Line 412
	mov	esi, DWORD PTR [ecx]
	mov	ecx, DWORD PTR [ecx+4]
	xor	edx, edx
; Line 413
	movss	DWORD PTR [eax+12], xmm0
; Line 414
	movss	xmm0, DWORD PTR _dpiY$[ebp]
	mov	DWORD PTR [eax+4], esi
	mov	DWORD PTR [eax], edx
	mov	DWORD PTR [eax+8], ecx
	movss	DWORD PTR [eax+16], xmm0
; Line 415
	mov	DWORD PTR [eax+20], edx
; Line 416
	mov	DWORD PTR [eax+24], edx
	pop	esi
; Line 419
	pop	ebp
	ret	0
?RenderTargetProperties@D2D1@@YA?AUD2D1_RENDER_TARGET_PROPERTIES@@W4D2D1_RENDER_TARGET_TYPE@@ABUD2D1_PIXEL_FORMAT@@MMW4D2D1_RENDER_TARGET_USAGE@@W4D2D1_FEATURE_LEVEL@@@Z ENDP ; D2D1::RenderTargetProperties
; Function compile flags: /Ogsp
_TEXT	ENDS
;	COMDAT ?PixelFormat@D2D1@@YA?AUD2D1_PIXEL_FORMAT@@W4DXGI_FORMAT@@W4D2D1_ALPHA_MODE@@@Z
_TEXT	SEGMENT
?PixelFormat@D2D1@@YA?AUD2D1_PIXEL_FORMAT@@W4DXGI_FORMAT@@W4D2D1_ALPHA_MODE@@@Z PROC ; D2D1::PixelFormat, COMDAT
; Line 369
	xor	eax, eax
; Line 370
	xor	edx, edx
; Line 373
	ret	0
?PixelFormat@D2D1@@YA?AUD2D1_PIXEL_FORMAT@@W4DXGI_FORMAT@@W4D2D1_ALPHA_MODE@@@Z ENDP ; D2D1::PixelFormat
; Function compile flags: /Ogsp
_TEXT	ENDS
;	COMDAT ?RectF@D2D1@@YA?AUD2D_RECT_F@@MMMM@Z
_TEXT	SEGMENT
$T77330 = -16						; size = 16
_top$ = 8						; size = 4
_right$ = 12						; size = 4
_bottom$ = 16						; size = 4
?RectF@D2D1@@YA?AUD2D_RECT_F@@MMMM@Z PROC		; D2D1::RectF, COMDAT
; $T77329 = eax
; _left$ = xmm0s
; Line 155
	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
; Line 156
	movss	DWORD PTR $T77330[ebp], xmm0
	movss	xmm0, DWORD PTR _top$[ebp]
	push	esi
	movss	DWORD PTR $T77330[ebp+4], xmm0
	movss	xmm0, DWORD PTR _right$[ebp]
	push	edi
	movss	DWORD PTR $T77330[ebp+8], xmm0
	movss	xmm0, DWORD PTR _bottom$[ebp]
	movss	DWORD PTR $T77330[ebp+12], xmm0
	lea	esi, DWORD PTR $T77330[ebp]
	mov	edi, eax
	movsd
	movsd
	movsd
	movsd
	pop	edi
	pop	esi
; Line 157
	leave
	ret	0
?RectF@D2D1@@YA?AUD2D_RECT_F@@MMMM@Z ENDP		; D2D1::RectF
; Function compile flags: /Ogsp
_TEXT	ENDS
;	COMDAT ?SizeU@D2D1@@YA?AUD2D_SIZE_U@@II@Z
_TEXT	SEGMENT
?SizeU@D2D1@@YA?AUD2D_SIZE_U@@II@Z PROC			; D2D1::SizeU, COMDAT
; _width$ = eax
; _height$ = edx
; Line 130
	ret	0
?SizeU@D2D1@@YA?AUD2D_SIZE_U@@II@Z ENDP			; D2D1::SizeU
; Function compile flags: /Ogsp
_TEXT	ENDS
;	COMDAT ?CreateHwndRenderTarget@ID2D1Factory@@QAEJABUD2D1_RENDER_TARGET_PROPERTIES@@ABUD2D1_HWND_RENDER_TARGET_PROPERTIES@@PAPAUID2D1HwndRenderTarget@@@Z
_TEXT	SEGMENT
?CreateHwndRenderTarget@ID2D1Factory@@QAEJABUD2D1_RENDER_TARGET_PROPERTIES@@ABUD2D1_HWND_RENDER_TARGET_PROPERTIES@@PAPAUID2D1HwndRenderTarget@@@Z PROC ; ID2D1Factory::CreateHwndRenderTarget, COMDAT
; File c:\program files (x86)\microsoft sdks\windows\v7.0a\include\d2d1.h
; Line 3858
	mov	eax, DWORD PTR ?pd2Factory@@3PAUID2D1Factory@@A ; pd2Factory
; Line 3859
	mov	ecx, DWORD PTR [eax]
	push	OFFSET ?pTarget@@3PAUID2D1HwndRenderTarget@@A ; pTarget
	push	OFFSET ?hwndrtProp@@3UD2D1_HWND_RENDER_TARGET_PROPERTIES@@A ; hwndrtProp
	push	OFFSET ?rtProp@@3UD2D1_RENDER_TARGET_PROPERTIES@@A ; rtProp
	push	eax
	call	DWORD PTR [ecx+56]
; Line 3860
	ret	0
?CreateHwndRenderTarget@ID2D1Factory@@QAEJABUD2D1_RENDER_TARGET_PROPERTIES@@ABUD2D1_HWND_RENDER_TARGET_PROPERTIES@@PAPAUID2D1HwndRenderTarget@@@Z ENDP ; ID2D1Factory::CreateHwndRenderTarget
; Function compile flags: /Ogsp
_TEXT	ENDS
;	COMDAT ?Resize@ID2D1HwndRenderTarget@@QAEJABUD2D_SIZE_U@@@Z
_TEXT	SEGMENT
_pixelSize$ = 8						; size = 4
?Resize@ID2D1HwndRenderTarget@@QAEJABUD2D_SIZE_U@@@Z PROC ; ID2D1HwndRenderTarget::Resize, COMDAT
; Line 3599
	push	ebp
	mov	ebp, esp
	mov	eax, DWORD PTR ?pTarget@@3PAUID2D1HwndRenderTarget@@A ; pTarget
; Line 3600
	push	DWORD PTR _pixelSize$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	eax
	call	DWORD PTR [ecx+232]
; Line 3601
	pop	ebp
	ret	4
?Resize@ID2D1HwndRenderTarget@@QAEJABUD2D_SIZE_U@@@Z ENDP ; ID2D1HwndRenderTarget::Resize
; Function compile flags: /Ogsp
_TEXT	ENDS
;	COMDAT ?DrawRectangle@ID2D1RenderTarget@@QAEXABUD2D_RECT_F@@PAUID2D1Brush@@MPAUID2D1StrokeStyle@@@Z
_TEXT	SEGMENT
_rect$ = 8						; size = 4
?DrawRectangle@ID2D1RenderTarget@@QAEXABUD2D_RECT_F@@PAUID2D1Brush@@MPAUID2D1StrokeStyle@@@Z PROC ; ID2D1RenderTarget::DrawRectangle, COMDAT
; _strokeWidth$ = xmm0s
; Line 3398
	push	ebp
	mov	ebp, esp
	mov	eax, DWORD PTR ?pTarget@@3PAUID2D1HwndRenderTarget@@A ; pTarget
; Line 3399
	mov	ecx, DWORD PTR [eax]
	push	0
	push	ecx
	movss	DWORD PTR [esp], xmm0
	push	DWORD PTR ?pBlackBrush@@3PAUID2D1SolidColorBrush@@A ; pBlackBrush
	push	DWORD PTR _rect$[ebp]
	push	eax
	call	DWORD PTR [ecx+64]
; Line 3400
	pop	ebp
	ret	4
?DrawRectangle@ID2D1RenderTarget@@QAEXABUD2D_RECT_F@@PAUID2D1Brush@@MPAUID2D1StrokeStyle@@@Z ENDP ; ID2D1RenderTarget::DrawRectangle
; Function compile flags: /Ogsp
_TEXT	ENDS
;	COMDAT ?CreateSolidColorBrush@ID2D1RenderTarget@@QAEJABUD3DCOLORVALUE@@PAPAUID2D1SolidColorBrush@@@Z
_TEXT	SEGMENT
_color$ = 8						; size = 4
_solidColorBrush$ = 12					; size = 4
?CreateSolidColorBrush@ID2D1RenderTarget@@QAEJABUD3DCOLORVALUE@@PAPAUID2D1SolidColorBrush@@@Z PROC ; ID2D1RenderTarget::CreateSolidColorBrush, COMDAT
; Line 3258
	push	ebp
	mov	ebp, esp
; Line 3259
	push	DWORD PTR _solidColorBrush$[ebp]
	mov	eax, DWORD PTR ?pTarget@@3PAUID2D1HwndRenderTarget@@A ; pTarget
	mov	ecx, DWORD PTR [eax]
	push	0
	push	DWORD PTR _color$[ebp]
	push	eax
	call	DWORD PTR [ecx+32]
; Line 3260
	pop	ebp
	ret	8
?CreateSolidColorBrush@ID2D1RenderTarget@@QAEJABUD3DCOLORVALUE@@PAPAUID2D1SolidColorBrush@@@Z ENDP ; ID2D1RenderTarget::CreateSolidColorBrush
; Function compile flags: /Ogsp
_TEXT	ENDS
;	COMDAT ??$D2D1CreateFactory@UID2D1Factory@@@@YAJW4D2D1_FACTORY_TYPE@@PAPAUID2D1Factory@@@Z
_TEXT	SEGMENT
??$D2D1CreateFactory@UID2D1Factory@@@@YAJW4D2D1_FACTORY_TYPE@@PAPAUID2D1Factory@@@Z PROC ; D2D1CreateFactory<ID2D1Factory>, COMDAT
; Line 6976
	push	OFFSET ?pd2Factory@@3PAUID2D1Factory@@A	; pd2Factory
	push	0
	push	OFFSET __GUID_06152247_6f50_465a_9245_118bfd3b6007
	push	0
	call	DWORD PTR __imp__D2D1CreateFactory@16
; Line 6977
	ret	0
??$D2D1CreateFactory@UID2D1Factory@@@@YAJW4D2D1_FACTORY_TYPE@@PAPAUID2D1Factory@@@Z ENDP ; D2D1CreateFactory<ID2D1Factory>
_TEXT	ENDS
PUBLIC	__real@3f800000
PUBLIC	__$ArrayPad$
PUBLIC	?DXDrawBlock@@YAXPAUBlock@@@Z			; DXDrawBlock
EXTRN	___security_cookie:DWORD
;	COMDAT __real@3f800000
CONST	SEGMENT
__real@3f800000 DD 03f800000r			; 1
; Function compile flags: /Ogsp
CONST	ENDS
;	COMDAT ?DXDrawBlock@@YAXPAUBlock@@@Z
_TEXT	SEGMENT
$T77403 = -60						; size = 16
$T77379 = -60						; size = 16
_body$ = -40						; size = 16
_header$ = -24						; size = 16
__$ArrayPad$ = -8					; size = 4
_block$ = 8						; size = 4
?DXDrawBlock@@YAXPAUBlock@@@Z PROC			; DXDrawBlock, COMDAT
; File c:\users\dimarich\documents\visual studio 2010\projects\blocks\blocks\blocks.cpp
; Line 244
	push	ebp
	mov	ebp, esp
	sub	esp, 64					; 00000040H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
; Line 246
	mov	eax, DWORD PTR ?clientRect@@3UtagRECT@@A+12
	push	ebx
	mov	ebx, DWORD PTR _block$[ebp]
	mov	edx, DWORD PTR [ebx+4]
	mov	ecx, DWORD PTR [ebx]
	push	esi
	mov	esi, eax
	sub	esi, DWORD PTR [ebx+12]
	push	edi
	sub	esi, edx
	xorps	xmm0, xmm0
	cvtsi2ss xmm0, ecx
	movss	DWORD PTR $T77379[ebp], xmm0
	xorps	xmm1, xmm1
	cvtsi2ss xmm1, esi
	mov	esi, DWORD PTR [ebx+8]
	add	esi, ecx
	movss	DWORD PTR $T77379[ebp+4], xmm1
	mov	ecx, eax
; Line 247
	sub	eax, DWORD PTR [ebx+12]
	sub	ecx, edx
	xorps	xmm1, xmm1
	cvtsi2ss xmm1, esi
	movss	DWORD PTR $T77379[ebp+8], xmm1
	xorps	xmm2, xmm2
	cvtsi2ss xmm2, ecx
	movss	DWORD PTR $T77379[ebp+12], xmm2
	lea	esi, DWORD PTR $T77379[ebp]
	lea	edi, DWORD PTR _body$[ebp]
	movsd
	movsd
	movsd
	movsd
	movss	DWORD PTR $T77403[ebp], xmm0
	sub	eax, edx
	xorps	xmm0, xmm0
	cvtsi2ss xmm0, eax
	movss	DWORD PTR $T77403[ebp+4], xmm0
	add	eax, -20				; ffffffecH
	movss	DWORD PTR $T77403[ebp+8], xmm1
	xorps	xmm0, xmm0
	cvtsi2ss xmm0, eax
; Line 249
	mov	eax, DWORD PTR ?pTarget@@3PAUID2D1HwndRenderTarget@@A ; pTarget
	movss	DWORD PTR $T77403[ebp+12], xmm0
	movss	xmm0, DWORD PTR __real@3f800000
	lea	esi, DWORD PTR $T77403[ebp]
	lea	edi, DWORD PTR _header$[ebp]
	movsd
	movsd
	movsd
	movsd
	mov	ecx, DWORD PTR [eax]
	xor	esi, esi
	push	esi
	push	ecx
	movss	DWORD PTR [esp], xmm0
	push	DWORD PTR ?pBlackBrush@@3PAUID2D1SolidColorBrush@@A ; pBlackBrush
	lea	edx, DWORD PTR _body$[ebp]
	push	edx
	push	eax
	call	DWORD PTR [ecx+64]
; Line 250
	mov	eax, DWORD PTR ?pTarget@@3PAUID2D1HwndRenderTarget@@A ; pTarget
	mov	ecx, DWORD PTR [eax]
	movss	xmm0, DWORD PTR __real@3f800000
	push	esi
	push	ecx
	movss	DWORD PTR [esp], xmm0
	push	DWORD PTR ?pBlackBrush@@3PAUID2D1SolidColorBrush@@A ; pBlackBrush
	lea	edx, DWORD PTR _header$[ebp]
	push	edx
	push	eax
	call	DWORD PTR [ecx+64]
; Line 251
	mov	eax, DWORD PTR ?pTarget@@3PAUID2D1HwndRenderTarget@@A ; pTarget
	mov	ecx, DWORD PTR [eax]
	push	esi
	push	esi
	push	DWORD PTR ?pBlackBrush@@3PAUID2D1SolidColorBrush@@A ; pBlackBrush
	lea	edx, DWORD PTR _header$[ebp]
	push	edx
	push	DWORD PTR ?pBlockHeaderTextFormat@@3PAUIDWriteTextFormat@@A ; pBlockHeaderTextFormat
	push	6
	push	DWORD PTR [ebx+16]
	push	eax
	call	DWORD PTR [ecx+108]
; Line 253
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	pop	edi
	pop	esi
	xor	ecx, ebp
	pop	ebx
	call	@__security_check_cookie@4
	leave
	ret	0
?DXDrawBlock@@YAXPAUBlock@@@Z ENDP			; DXDrawBlock
_TEXT	ENDS
PUBLIC	?DXDraw@@YAXPAUSpace@@PAX@Z			; DXDraw
; Function compile flags: /Ogsp
;	COMDAT ?DXDraw@@YAXPAUSpace@@PAX@Z
_TEXT	SEGMENT
_workingSpace$ = 8					; size = 4
_arg$ = 12						; size = 4
?DXDraw@@YAXPAUSpace@@PAX@Z PROC			; DXDraw, COMDAT
; Line 206
	push	ebp
	mov	ebp, esp
	and	esp, -8					; fffffff8H
	push	ecx
; Line 208
	mov	eax, DWORD PTR ?pTarget@@3PAUID2D1HwndRenderTarget@@A ; pTarget
	push	ebx
	xor	ebx, ebx
	push	esi
	push	edi
	cmp	eax, ebx
	je	SHORT $LN4@DXDraw
	mov	esi, DWORD PTR _workingSpace$[ebp]
	cmp	esi, ebx
	je	SHORT $LN4@DXDraw
; Line 213
	mov	ecx, DWORD PTR [eax]
	push	eax
	call	DWORD PTR [ecx+192]
; Line 214
	mov	eax, DWORD PTR ?pTarget@@3PAUID2D1HwndRenderTarget@@A ; pTarget
	mov	ecx, DWORD PTR [eax]
	push	OFFSET ?whiteColor@@3UD3DCOLORVALUE@@A	; whiteColor
	push	eax
	call	DWORD PTR [ecx+188]
; Line 215
	xor	edi, edi
	cmp	DWORD PTR [esi], ebx
	jle	SHORT $LN1@DXDraw
$LL3@DXDraw:
; Line 216
	mov	eax, DWORD PTR [esi+4]
	add	eax, ebx
	push	eax
	call	?DXDrawBlock@@YAXPAUBlock@@@Z		; DXDrawBlock
	inc	edi
	add	ebx, 24					; 00000018H
	pop	ecx
	cmp	edi, DWORD PTR [esi]
	jl	SHORT $LL3@DXDraw
$LN1@DXDraw:
; Line 218
	mov	eax, DWORD PTR ?pTarget@@3PAUID2D1HwndRenderTarget@@A ; pTarget
	mov	ecx, DWORD PTR [eax]
	push	0
	push	0
	push	eax
	call	DWORD PTR [ecx+196]
$LN4@DXDraw:
; Line 220
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?DXDraw@@YAXPAUSpace@@PAX@Z ENDP			; DXDraw
_TEXT	ENDS
PUBLIC	__real@41900000
PUBLIC	?DXInit@@YAXXZ					; DXInit
;	COMDAT __real@41900000
; File c:\program files (x86)\microsoft sdks\windows\v7.0a\include\d2d1.h
CONST	SEGMENT
__real@41900000 DD 041900000r			; 18
; Function compile flags: /Ogsp
CONST	ENDS
;	COMDAT ?DXInit@@YAXXZ
_TEXT	SEGMENT
$T77436 = -28						; size = 28
$T77439 = -16						; size = 16
?DXInit@@YAXXZ PROC					; DXInit, COMDAT
; File c:\users\dimarich\documents\visual studio 2010\projects\blocks\blocks\blocks.cpp
; Line 156
	push	ebp
	mov	ebp, esp
	sub	esp, 28					; 0000001cH
	push	ebx
; Line 158
	push	OFFSET ?pd2Factory@@3PAUID2D1Factory@@A	; pd2Factory
	xor	ebx, ebx
	push	ebx
	push	OFFSET __GUID_06152247_6f50_465a_9245_118bfd3b6007
	push	ebx
	call	DWORD PTR __imp__D2D1CreateFactory@16
	test	eax, eax
	je	SHORT $LN3@DXInit
; Line 159
	push	16					; 00000010H
	push	ebx
	push	OFFSET ??_C@_1EG@KCDIDEBK@?$AAC?$AAo?$AAu?$AAl?$AAd?$AA?5?$AAn?$AAo?$AAt?$AA?5?$AAc?$AAr?$AAe?$AAa?$AAt?$AAe?$AA?5?$AAD?$AAi?$AAr?$AAe?$AAc?$AAt?$AA2?$AAD?$AA?5?$AAf?$AAa?$AAc?$AAt?$AAo?$AAr@
$LN27@DXInit:
	push	ebx
	call	DWORD PTR __imp__MessageBoxW@16
; Line 160
	push	-1
	call	DWORD PTR __imp__ExitProcess@4
$LN28@DXInit:
$LN3@DXInit:
; Line 162
	push	OFFSET ?pdwFactory@@3PAUIDWriteFactory@@A ; pdwFactory
	push	OFFSET __GUID_b859ee5a_d838_4b5b_a2e8_1adc7d93db48
	push	ebx
	call	DWORD PTR __imp__DWriteCreateFactory@12
	test	eax, eax
	je	SHORT $LN2@DXInit
; Line 163
	push	16					; 00000010H
	push	ebx
	push	OFFSET ??_C@_1EM@CHCFPCCO@?$AAC?$AAo?$AAu?$AAl?$AAd?$AA?5?$AAn?$AAo?$AAt?$AA?5?$AAc?$AAr?$AAe?$AAa?$AAt?$AAe?$AA?5?$AAD?$AAi?$AAr?$AAe?$AAc?$AAt?$AAW?$AAr?$AAi?$AAt?$AAe?$AA?5?$AAf?$AAa?$AAc@
; Line 164
	jmp	SHORT $LN27@DXInit
$LN2@DXInit:
; Line 166
	xorps	xmm0, xmm0
	push	esi
	push	edi
	xor	ecx, ecx
	mov	DWORD PTR $T77436[ebp+8], ecx
	push	7
	xor	eax, eax
	mov	DWORD PTR $T77436[ebp+4], eax
; Line 167
	mov	eax, DWORD PTR ?clientRect@@3UtagRECT@@A+8
	sub	eax, DWORD PTR ?clientRect@@3UtagRECT@@A
	movss	DWORD PTR $T77436[ebp+12], xmm0
	movss	DWORD PTR $T77436[ebp+16], xmm0
	pop	ecx
	mov	DWORD PTR $T77436[ebp+20], ebx
	mov	DWORD PTR $T77436[ebp+24], ebx
	mov	edx, OFFSET ?rtProp@@3UD2D1_RENDER_TARGET_PROPERTIES@@A ; rtProp
	mov	DWORD PTR $T77436[ebp], ebx
	mov	edi, edx
	lea	esi, DWORD PTR $T77436[ebp]
	rep movsd
	mov	ecx, DWORD PTR ?clientRect@@3UtagRECT@@A+12
	sub	ecx, DWORD PTR ?clientRect@@3UtagRECT@@A+4
	mov	esi, DWORD PTR ?hMainWindow@@3PAUHWND__@@A ; hMainWindow
	mov	DWORD PTR $T77439[ebp+8], ecx
	mov	DWORD PTR $T77439[ebp], esi
	mov	DWORD PTR $T77439[ebp+4], eax
; Line 168
	mov	eax, DWORD PTR ?pd2Factory@@3PAUID2D1Factory@@A ; pd2Factory
	mov	ecx, OFFSET ?hwndrtProp@@3UD2D1_HWND_RENDER_TARGET_PROPERTIES@@A ; hwndrtProp
	mov	DWORD PTR $T77439[ebp+12], ebx
	mov	edi, ecx
	lea	esi, DWORD PTR $T77439[ebp]
	movsd
	movsd
	push	OFFSET ?pTarget@@3PAUID2D1HwndRenderTarget@@A ; pTarget
	movsd
	push	ecx
	push	edx
	movsd
	mov	esi, DWORD PTR [eax]
	push	eax
	call	DWORD PTR [esi+56]
; Line 169
	mov	eax, DWORD PTR ?pTarget@@3PAUID2D1HwndRenderTarget@@A ; pTarget
	pop	edi
	pop	esi
	cmp	eax, ebx
	je	SHORT $LN24@DXInit
; Line 170
	xorps	xmm0, xmm0
; Line 171
	push	OFFSET ?pBlackBrush@@3PAUID2D1SolidColorBrush@@A ; pBlackBrush
	push	ebx
	push	OFFSET ?blackColor@@3UD3DCOLORVALUE@@A	; blackColor
	movss	DWORD PTR ?blackColor@@3UD3DCOLORVALUE@@A+8, xmm0
	movss	DWORD PTR ?blackColor@@3UD3DCOLORVALUE@@A+4, xmm0
	movss	DWORD PTR ?blackColor@@3UD3DCOLORVALUE@@A, xmm0
	mov	ecx, DWORD PTR [eax]
	push	eax
	call	DWORD PTR [ecx+32]
; Line 172
	mov	eax, DWORD PTR ?pTarget@@3PAUID2D1HwndRenderTarget@@A ; pTarget
	mov	ecx, DWORD PTR [eax]
	push	OFFSET ?pWhiteBrush@@3PAUID2D1SolidColorBrush@@A ; pWhiteBrush
	push	ebx
	push	OFFSET ?whiteColor@@3UD3DCOLORVALUE@@A	; whiteColor
	push	eax
	call	DWORD PTR [ecx+32]
$LN24@DXInit:
; Line 174
	mov	eax, DWORD PTR ?pdwFactory@@3PAUIDWriteFactory@@A ; pdwFactory
	mov	ecx, DWORD PTR [eax]
	movss	xmm0, DWORD PTR __real@41900000
	push	OFFSET ?pBlockHeaderTextFormat@@3PAUIDWriteTextFormat@@A ; pBlockHeaderTextFormat
	push	OFFSET ??_C@_1M@LLODPCMM@?$AAe?$AAn?$AA?9?$AAu?$AAs?$AA?$AA@
	push	ecx
	movss	DWORD PTR [esp], xmm0
	push	5
	push	ebx
	push	400					; 00000190H
	push	ebx
	push	OFFSET ??_C@_1M@KAKMLIHO@?$AAA?$AAr?$AAi?$AAa?$AAl?$AA?$AA@
	push	eax
	call	DWORD PTR [ecx+60]
	pop	ebx
; Line 176
	leave
	ret	0
$LN26@DXInit:
?DXInit@@YAXXZ ENDP					; DXInit
; Function compile flags: /Ogsp
_TEXT	ENDS
;	COMDAT ?WindowProc@@YGJPAUHWND__@@IIJ@Z
_TEXT	SEGMENT
$T77498 = -8						; size = 8
_hWnd$ = 8						; size = 4
_uMsg$ = 12						; size = 4
_wParam$ = 16						; size = 4
_lParam$ = 20						; size = 4
?WindowProc@@YGJPAUHWND__@@IIJ@Z PROC			; WindowProc, COMDAT
; Line 93
	push	ebp
	mov	ebp, esp
	push	ecx
	push	ecx
; Line 95
	mov	eax, DWORD PTR _uMsg$[ebp]
	dec	eax
	je	$LN7@WindowProc
	dec	eax
	je	$LN6@WindowProc
	sub	eax, 3
	je	SHORT $LN5@WindowProc
	sub	eax, 10					; 0000000aH
	je	SHORT $LN1@WindowProc
	sub	eax, 241				; 000000f1H
	je	SHORT $LN4@WindowProc
	sub	eax, 256				; 00000100H
	jne	SHORT $LN8@WindowProc
; Line 116
	push	eax
	push	OFFSET ?clientRect@@3UtagRECT@@A	; clientRect
	push	DWORD PTR ?hMainWindow@@3PAUHWND__@@A	; hMainWindow
	call	DWORD PTR __imp__InvalidateRect@12
; Line 117
	jmp	$LN18@WindowProc
$LN4@WindowProc:
; Line 109
	cmp	DWORD PTR _wParam$[ebp], 27		; 0000001bH
; Line 110
	push	0
	jne	SHORT $LN3@WindowProc
$LN19@WindowProc:
	call	DWORD PTR __imp__PostQuitMessage@4
; Line 111
	jmp	$LN18@WindowProc
$LN3@WindowProc:
; Line 113
	push	OFFSET ?clientRect@@3UtagRECT@@A	; clientRect
	push	DWORD PTR ?hMainWindow@@3PAUHWND__@@A	; hMainWindow
	call	DWORD PTR __imp__InvalidateRect@12
$LN8@WindowProc:
; Line 122
	push	DWORD PTR _lParam$[ebp]
	push	DWORD PTR _wParam$[ebp]
	push	DWORD PTR _uMsg$[ebp]
	push	DWORD PTR _hWnd$[ebp]
	call	DWORD PTR __imp__DefWindowProcW@16
	jmp	$LN10@WindowProc
$LN1@WindowProc:
; Line 119
	push	DWORD PTR ?drawArg@@3PAXA		; drawArg
	push	OFFSET ?space@@3USpace@@A		; space
	call	DWORD PTR ?drawProc@@3P6AXPAUSpace@@PAX@ZA ; drawProc
	pop	ecx
	pop	ecx
; Line 120
	jmp	SHORT $LN18@WindowProc
$LN5@WindowProc:
	push	esi
; Line 104
	mov	esi, OFFSET ?clientRect@@3UtagRECT@@A	; clientRect
	push	esi
	push	DWORD PTR ?hMainWindow@@3PAUHWND__@@A	; hMainWindow
	call	DWORD PTR __imp__GetClientRect@8
; Line 105
	mov	eax, DWORD PTR ?clientRect@@3UtagRECT@@A+8
	sub	eax, DWORD PTR ?clientRect@@3UtagRECT@@A
	mov	ecx, DWORD PTR ?clientRect@@3UtagRECT@@A+12
	sub	ecx, DWORD PTR ?clientRect@@3UtagRECT@@A+4
	mov	DWORD PTR $T77498[ebp], eax
	mov	eax, DWORD PTR ?pTarget@@3PAUID2D1HwndRenderTarget@@A ; pTarget
	lea	edx, DWORD PTR $T77498[ebp]
	push	edx
	mov	DWORD PTR $T77498[ebp+4], ecx
	mov	ecx, DWORD PTR [eax]
	push	eax
	call	DWORD PTR [ecx+232]
; Line 106
	push	0
	push	esi
	push	DWORD PTR ?hMainWindow@@3PAUHWND__@@A	; hMainWindow
	call	DWORD PTR __imp__InvalidateRect@12
	pop	esi
; Line 107
	jmp	SHORT $LN18@WindowProc
$LN6@WindowProc:
; Line 101
	push	0
; Line 102
	jmp	$LN19@WindowProc
$LN7@WindowProc:
; Line 97
	push	1
	push	DWORD PTR ?hMainWindow@@3PAUHWND__@@A	; hMainWindow
	call	DWORD PTR __imp__ShowWindow@8
; Line 98
	push	DWORD PTR ?hMainWindow@@3PAUHWND__@@A	; hMainWindow
	call	DWORD PTR __imp__UpdateWindow@4
$LN18@WindowProc:
; Line 99
	xor	eax, eax
$LN10@WindowProc:
; Line 123
	leave
	ret	16					; 00000010H
?WindowProc@@YGJPAUHWND__@@IIJ@Z ENDP			; WindowProc
_TEXT	ENDS
PUBLIC	_WinMain@16
; Function compile flags: /Ogsp
;	COMDAT _WinMain@16
_TEXT	SEGMENT
_msg$ = -28						; size = 28
_hInstance$ = 8						; size = 4
_hPrevInstance$ = 12					; size = 4
_lpCmdLine$ = 16					; size = 4
_nCmdShow$ = 20						; size = 4
_WinMain@16 PROC					; COMDAT
; Line 50
	push	ebp
	mov	ebp, esp
; Line 69
	mov	eax, DWORD PTR _hInstance$[ebp]
	sub	esp, 28					; 0000001cH
	push	esi
	push	edi
; Line 70
	push	32512					; 00007f00H
	xor	esi, esi
	push	esi
	mov	DWORD PTR ?drawType@@3W4DrawType@@A, 2	; drawType
	mov	DWORD PTR ?drawProc@@3P6AXPAUSpace@@PAX@ZA, OFFSET ?DXDraw@@YAXPAUSpace@@PAX@Z ; drawProc, DXDraw
	mov	DWORD PTR ?initProc@@3P6AXXZA, OFFSET ?DXInit@@YAXXZ ; initProc, DXInit
	mov	DWORD PTR ?windowClass@@3UtagWNDCLASSEXW@@A+20, eax
	call	DWORD PTR __imp__LoadCursorW@8
; Line 72
	push	OFFSET ?windowClass@@3UtagWNDCLASSEXW@@A ; windowClass
	mov	DWORD PTR ?windowClass@@3UtagWNDCLASSEXW@@A+28, eax
	call	DWORD PTR __imp__RegisterClassExW@4
; Line 74
	push	esi
	push	esi
	push	esi
	push	esi
	mov	eax, 500				; 000001f4H
	push	eax
	push	eax
	push	esi
	push	esi
	push	269418496				; 100f0000H
	push	OFFSET ??_C@_1CK@MLMKONGA@?$AAB?$AAl?$AAo?$AAc?$AAk?$AAs?$AA?$CB?$AA?5?$AA?$CI?$AAl?$AAo?$AAa?$AAd?$AAi?$AAn?$AAg?$AA?4?$AA?4?$AA?4?$AA?$CJ?$AA?$AA@
	push	OFFSET ??_C@_1BI@MLPDPDAN@?$AAB?$AAl?$AAo?$AAc?$AAk?$AAs?$AAC?$AAl?$AAa?$AAs?$AAs?$AA?$AA@
	push	esi
	call	DWORD PTR __imp__CreateWindowExW@48
; Line 75
	push	OFFSET ?clientRect@@3UtagRECT@@A	; clientRect
	push	eax
	mov	DWORD PTR ?hMainWindow@@3PAUHWND__@@A, eax ; hMainWindow
	call	DWORD PTR __imp__GetClientRect@8
; Line 77
	call	DWORD PTR ?initProc@@3P6AXXZA		; initProc
; Line 79
	push	OFFSET ??_C@_1BA@GEBNDOOE@?$AAB?$AAl?$AAo?$AAc?$AAk?$AAs?$AA?$CB?$AA?$AA@
	push	DWORD PTR ?hMainWindow@@3PAUHWND__@@A	; hMainWindow
	call	DWORD PTR __imp__SetWindowTextW@8
; Line 82
	mov	edi, DWORD PTR __imp__GetMessageW@16
	jmp	SHORT $LN14@WinMain
$LL2@WinMain:
; Line 84
	lea	eax, DWORD PTR _msg$[ebp]
	push	eax
	call	DWORD PTR __imp__TranslateMessage@4
; Line 85
	lea	eax, DWORD PTR _msg$[ebp]
	push	eax
	call	DWORD PTR __imp__DispatchMessageW@4
$LN14@WinMain:
; Line 82
	push	esi
	push	esi
	push	esi
	lea	eax, DWORD PTR _msg$[ebp]
	push	eax
	call	edi
	test	eax, eax
	jne	SHORT $LL2@WinMain
; Line 88
	push	esi
	call	DWORD PTR __imp__ExitProcess@4
$LN15@WinMain:
$LN12@WinMain:
	int	3
_WinMain@16 ENDP
; Function compile flags: /Ogsp
_TEXT	ENDS
;	COMDAT ??__EblackColor@@YAXXZ
text$yc	SEGMENT
$T76794 = -16						; size = 16
??__EblackColor@@YAXXZ PROC				; `dynamic initializer for 'blackColor'', COMDAT
; Line 11
	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	xorps	xmm0, xmm0
	divsd	xmm0, QWORD PTR __real@406fe00000000000
	push	esi
	push	edi
	cvtpd2ps xmm0, xmm0
	movss	DWORD PTR $T76794[ebp], xmm0
	movss	DWORD PTR $T76794[ebp+4], xmm0
	movss	DWORD PTR $T76794[ebp+8], xmm0
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR $T76794[ebp+12], xmm0
	lea	esi, DWORD PTR $T76794[ebp]
	mov	edi, OFFSET ?blackColor@@3UD3DCOLORVALUE@@A ; blackColor
	movsd
	movsd
	movsd
	movsd
	pop	edi
	pop	esi
	leave
	ret	0
??__EblackColor@@YAXXZ ENDP				; `dynamic initializer for 'blackColor''
; Function compile flags: /Ogsp
text$yc	ENDS
;	COMDAT ??__EwhiteColor@@YAXXZ
text$yc	SEGMENT
$T76823 = -16						; size = 16
??__EwhiteColor@@YAXXZ PROC				; `dynamic initializer for 'whiteColor'', COMDAT
; Line 12
	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	movss	xmm0, DWORD PTR __real@3f800000
	push	esi
	push	edi
	movss	DWORD PTR $T76823[ebp], xmm0
	movss	DWORD PTR $T76823[ebp+4], xmm0
	movss	DWORD PTR $T76823[ebp+8], xmm0
	movss	DWORD PTR $T76823[ebp+12], xmm0
	lea	esi, DWORD PTR $T76823[ebp]
	mov	edi, OFFSET ?whiteColor@@3UD3DCOLORVALUE@@A ; whiteColor
	movsd
	movsd
	movsd
	movsd
	pop	edi
	pop	esi
	leave
	ret	0
??__EwhiteColor@@YAXXZ ENDP				; `dynamic initializer for 'whiteColor''
text$yc	ENDS
PUBLIC	?blackColor@@3UD3DCOLORVALUE@@A			; blackColor
PUBLIC	?whiteColor@@3UD3DCOLORVALUE@@A			; whiteColor
?blackColor@@3UD3DCOLORVALUE@@A DB 010H DUP (?)		; blackColor
?whiteColor@@3UD3DCOLORVALUE@@A DB 010H DUP (?)		; whiteColor
CRT$XCU	SEGMENT
_blackColor$initializer$ DD FLAT:??__EblackColor@@YAXXZ
_whiteColor$initializer$ DD FLAT:??__EwhiteColor@@YAXXZ
CRT$XCU	ENDS
END
